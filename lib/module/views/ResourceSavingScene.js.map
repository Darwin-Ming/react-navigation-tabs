{"version":3,"names":["React","Platform","StyleSheet","View","Screen","screensEnabled","shouldUseActivityState","FAR_FAR_AWAY","ResourceSavingScene","Component","render","props","enabled","OS","isVisible","rest","createElement","_extends","activityState","active","children","style","styles","container","display","collapsable","removeClippedSubviews","pointerEvents","attached","detached","create","flex","overflow","top"],"sources":["ResourceSavingScene.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport {\n  Screen,\n  screensEnabled,\n  // @ts-ignore\n  shouldUseActivityState,\n} from 'react-native-screens';\n\ntype Props = {\n  isVisible: boolean;\n  children: React.ReactNode;\n  style?: any;\n  enabled: boolean;\n};\n\nconst FAR_FAR_AWAY = 30000; // this should be big enough to move the whole view out of its container\n\nexport default class ResourceSavingScene extends React.Component<Props> {\n  render() {\n    // react-native-screens is buggy on web\n    if (screensEnabled?.() && this.props.enabled && Platform.OS !== 'web') {\n      const { isVisible, ...rest } = this.props;\n\n      if (shouldUseActivityState) {\n        return (\n          // @ts-expect-error: there was an `active` prop and no `activityState` in older version and stackPresentation was required\n          <Screen activityState={isVisible ? 2 : 0} {...rest} />\n        );\n      } else {\n        return (\n          // @ts-expect-error: there was an `active` prop and no `activityState` in older version and stackPresentation was required\n          <Screen active={isVisible ? 1 : 0} {...rest} />\n        );\n      }\n    }\n\n    const { isVisible, children, style, ...rest } = this.props;\n\n    return (\n      <View\n        style={[\n          styles.container,\n          Platform.OS === 'web'\n            ? { display: isVisible ? 'flex' : 'none' }\n            : null,\n          style,\n        ]}\n        collapsable={false}\n        removeClippedSubviews={\n          // On iOS, set removeClippedSubviews to true only when not focused\n          // This is an workaround for a bug where the clipped view never re-appears\n          Platform.OS === 'ios' ? !isVisible : true\n        }\n        pointerEvents={isVisible ? 'auto' : 'none'}\n        {...rest}\n      >\n        <View style={isVisible ? styles.attached : styles.detached}>\n          {children}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  attached: {\n    flex: 1,\n  },\n  detached: {\n    flex: 1,\n    top: FAR_FAR_AWAY,\n  },\n});\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,EAAEC,UAAU,EAAEC,IAAI,QAAQ,cAAc;AACzD,SACEC,MAAM,EACNC,cAAc;AACd;AACAC,sBAAsB,QACjB,sBAAsB;AAS7B,MAAMC,YAAY,GAAG,KAAK,CAAC,CAAC;;AAE5B,eAAe,MAAMC,mBAAmB,SAASR,KAAK,CAACS,SAAS,CAAQ;EACtEC,MAAMA,CAAA,EAAG;IACP;IACA,IAAIL,cAAc,aAAdA,cAAc,eAAdA,cAAc,CAAG,CAAC,IAAI,IAAI,CAACM,KAAK,CAACC,OAAO,IAAIX,QAAQ,CAACY,EAAE,KAAK,KAAK,EAAE;MACrE,MAAM;QAAEC,SAAS;QAAE,GAAGC;MAAK,CAAC,GAAG,IAAI,CAACJ,KAAK;MAEzC,IAAIL,sBAAsB,EAAE;QAC1B;UAAA;UACE;UACAN,KAAA,CAAAgB,aAAA,CAACZ,MAAM,EAAAa,QAAA;YAACC,aAAa,EAAEJ,SAAS,GAAG,CAAC,GAAG;UAAE,GAAKC,IAAI,CAAG;QAAC;MAE1D,CAAC,MAAM;QACL;UAAA;UACE;UACAf,KAAA,CAAAgB,aAAA,CAACZ,MAAM,EAAAa,QAAA;YAACE,MAAM,EAAEL,SAAS,GAAG,CAAC,GAAG;UAAE,GAAKC,IAAI,CAAG;QAAC;MAEnD;IACF;IAEA,MAAM;MAAED,SAAS;MAAEM,QAAQ;MAAEC,KAAK;MAAE,GAAGN;IAAK,CAAC,GAAG,IAAI,CAACJ,KAAK;IAE1D,oBACEX,KAAA,CAAAgB,aAAA,CAACb,IAAI,EAAAc,QAAA;MACHI,KAAK,EAAE,CACLC,MAAM,CAACC,SAAS,EAChBtB,QAAQ,CAACY,EAAE,KAAK,KAAK,GACjB;QAAEW,OAAO,EAAEV,SAAS,GAAG,MAAM,GAAG;MAAO,CAAC,GACxC,IAAI,EACRO,KAAK,CACL;MACFI,WAAW,EAAE,KAAM;MACnBC,qBAAqB;MACnB;MACA;MACAzB,QAAQ,CAACY,EAAE,KAAK,KAAK,GAAG,CAACC,SAAS,GAAG,IACtC;MACDa,aAAa,EAAEb,SAAS,GAAG,MAAM,GAAG;IAAO,GACvCC,IAAI,gBAERf,KAAA,CAAAgB,aAAA,CAACb,IAAI;MAACkB,KAAK,EAAEP,SAAS,GAAGQ,MAAM,CAACM,QAAQ,GAAGN,MAAM,CAACO;IAAS,GACxDT,QACG,CACF,CAAC;EAEX;AACF;AAEA,MAAME,MAAM,GAAGpB,UAAU,CAAC4B,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,IAAI,EAAE,CAAC;IACPC,QAAQ,EAAE;EACZ,CAAC;EACDJ,QAAQ,EAAE;IACRG,IAAI,EAAE;EACR,CAAC;EACDF,QAAQ,EAAE;IACRE,IAAI,EAAE,CAAC;IACPE,GAAG,EAAE1B;EACP;AACF,CAAC,CAAC"}