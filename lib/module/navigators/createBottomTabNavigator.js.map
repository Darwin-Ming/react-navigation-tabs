{"version":3,"names":["React","View","StyleSheet","ScreenContainer","screensEnabled","createTabNavigator","BottomTabBar","ResourceSavingScene","TabNavigationView","PureComponent","constructor","args","_defineProperty","loaded","props","navigation","state","index","route","descriptors","descriptor","key","options","tabBarButtonComponent","undefined","tabBarComponent","TabBarComponent","tabBarOptions","screenProps","getLabelText","getAccessibilityLabel","getAccessibilityRole","getAccessibilityStates","getTestID","renderIcon","onTabPress","onTabLongPress","routes","tabBarVisible","createElement","_extends","jumpTo","_jumpTo","getButtonComponent","_getButtonComponent","onIndexChange","findIndex","getDerivedStateFromProps","nextProps","prevState","includes","render","renderScene","lazy","detachInactiveScreens","enabled","style","styles","container","pages","map","isFocused","absoluteFill","isVisible","_renderTabBar","focused","create","flex","overflow"],"sources":["createBottomTabNavigator.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet, AccessibilityRole } from 'react-native';\nimport { NavigationRoute } from 'react-navigation';\n\nimport { ScreenContainer, screensEnabled } from 'react-native-screens';\n\nimport createTabNavigator, {\n  NavigationViewProps,\n} from '../utils/createTabNavigator';\nimport BottomTabBar from '../views/BottomTabBar';\nimport ResourceSavingScene from '../views/ResourceSavingScene';\nimport {\n  NavigationTabProp,\n  NavigationBottomTabOptions,\n  BottomTabBarOptions,\n  SceneDescriptorMap,\n} from '../types';\n\ntype Config = {\n  lazy?: boolean;\n  tabBarComponent?: React.ComponentType<any>;\n  tabBarOptions?: BottomTabBarOptions;\n  detachInactiveScreens?: boolean;\n};\n\ntype Props = NavigationViewProps &\n  Config & {\n    getAccessibilityRole: (props: {\n      route: NavigationRoute;\n    }) => AccessibilityRole | undefined;\n    getAccessibilityStates: (props: {\n      route: NavigationRoute;\n      focused: boolean;\n    }) => string[];\n    navigation: NavigationTabProp;\n    descriptors: SceneDescriptorMap;\n    screenProps?: unknown;\n  };\n\ntype State = {\n  loaded: number[];\n};\n\nclass TabNavigationView extends React.PureComponent<Props, State> {\n  static defaultProps = {\n    lazy: true,\n    getAccessibilityRole: (): AccessibilityRole => 'button',\n    getAccessibilityStates: ({ focused }: { focused: boolean }) =>\n      focused ? ['selected'] : [],\n  };\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    const { index } = nextProps.navigation.state;\n\n    return {\n      // Set the current tab to be loaded if it was not loaded before\n      loaded: prevState.loaded.includes(index)\n        ? prevState.loaded\n        : [...prevState.loaded, index],\n    };\n  }\n\n  state = {\n    loaded: [this.props.navigation.state.index],\n  };\n\n  _getButtonComponent = ({ route }: { route: NavigationRoute }) => {\n    const { descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    if (options.tabBarButtonComponent) {\n      return options.tabBarButtonComponent;\n    }\n\n    return undefined;\n  };\n\n  _renderTabBar = () => {\n    const {\n      tabBarComponent: TabBarComponent = BottomTabBar,\n      tabBarOptions,\n      navigation,\n      screenProps,\n      getLabelText,\n      getAccessibilityLabel,\n      getAccessibilityRole,\n      getAccessibilityStates,\n      getTestID,\n      renderIcon,\n      onTabPress,\n      onTabLongPress,\n    } = this.props;\n\n    const { descriptors } = this.props;\n    const { state } = this.props.navigation;\n    const route = state.routes[state.index];\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    if (options.tabBarVisible === false) {\n      return null;\n    }\n\n    return (\n      <TabBarComponent\n        {...tabBarOptions}\n        jumpTo={this._jumpTo}\n        navigation={navigation}\n        screenProps={screenProps}\n        onTabPress={onTabPress}\n        onTabLongPress={onTabLongPress}\n        getLabelText={getLabelText}\n        getButtonComponent={this._getButtonComponent}\n        getAccessibilityLabel={getAccessibilityLabel}\n        getAccessibilityRole={getAccessibilityRole}\n        getAccessibilityStates={getAccessibilityStates}\n        getTestID={getTestID}\n        renderIcon={renderIcon}\n      />\n    );\n  };\n\n  _jumpTo = (key: string) => {\n    const { navigation, onIndexChange } = this.props;\n\n    const index = navigation.state.routes.findIndex(\n      (route) => route.key === key\n    );\n\n    onIndexChange(index);\n  };\n\n  render() {\n    const {\n      navigation,\n      renderScene,\n      lazy,\n      detachInactiveScreens = true,\n    } = this.props;\n    const { routes } = navigation.state;\n    const { loaded } = this.state;\n\n    const enabled = screensEnabled?.() && detachInactiveScreens;\n\n    return (\n      <View style={styles.container}>\n        {/* @ts-ignore */}\n        <ScreenContainer enabled={enabled} style={styles.pages}>\n          {routes.map((route, index) => {\n            if (lazy && !loaded.includes(index)) {\n              // Don't render a screen if we've never navigated to it\n              return null;\n            }\n\n            const isFocused = navigation.state.index === index;\n\n            return (\n              <ResourceSavingScene\n                key={route.key}\n                style={StyleSheet.absoluteFill}\n                isVisible={isFocused}\n                enabled={detachInactiveScreens}\n              >\n                {renderScene({ route })}\n              </ResourceSavingScene>\n            );\n          })}\n        </ScreenContainer>\n        {this._renderTabBar()}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  pages: {\n    flex: 1,\n  },\n});\n\nexport default createTabNavigator<Config, NavigationBottomTabOptions, Props>(\n  TabNavigationView\n);\n"],"mappings":"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"}